[include shell_command.cfg]
# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design Trident 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
# MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Hotend heater pin                    [extruder] section
## Leadscrew Rotation Distance          [stepper_z], [stepper_z1], [stepper_z2]
## Z Endstop Switch location            [safe_z_home] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Stepper Z1 enable pin                [stepper_z1] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[exclude_object]
[include KAMP_Settings.cfg]
[include mainsail.cfg]
[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32h743xx_340024000851303137353839-if00
restart_method: command
##--------------------------------------------------------------------

[output_pin PS-ON]
pin: PE4
value: 1
shutdown_value: 0

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 4000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

#  B Stepper - Left
#  Connected to MOTOR_XM
##  Endstop connected to DIAG_?????
[stepper_x]
step_pin: PD4
dir_pin: !PD3
enable_pin: !PD6
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^!PC1 
position_min: 0
position_endstop: 0
position_max: 288
homing_speed: 25   #half of rotation Distance
homing_retract_dist: 5
# homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PD5
interpolate: False
run_current: 0.5 # you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
sense_resistor: 0.110
stealthchop_threshold: 0


#------------------------------------------------------#

#  A Stepper - Right
#  Connected to MOTOR_YM
##  Endstop connected to DIAG_1
[stepper_y]

step_pin: PA15
dir_pin: PA8
enable_pin: !PD1
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^!PC3
position_min: 0
position_endstop: 200
position_max: 200
position_min: -15
homing_speed: 25   #half of rotation Distance
homing_retract_dist: 5
# homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD0
interpolate: False
run_current: 0.5  # you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

##  Z0 Stepper - Single Motor Driven Z axis
##  Connected to MOTOR_ZAM
##  Endstop connected to Virtual End Stop

[stepper_z]
step_pin: PE2
dir_pin: PE3
enable_pin: !PE0
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4   
microsteps: 32
endstop_pin: probe:z_virtual_endstop  #Configure z homing to use beacon as a virtual endstop
position_max: 170
position_min: 0
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
# second_homing_speed: 3
homing_retract_dist: 0 # beacon needs this to be set to 0
# homing_positive_dir: true

[tmc2209 stepper_z]
uart_pin: PE1
interpolate: False
run_current: 0.6  # you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
sense_resistor: 0.110
stealthchop_threshold: 0

[resonance_tester]
accel_chip: beacon
probe_points: 90, 90, 20

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_25C382EA5154364134202020FF14120A-if00
x_offset: 0 # update with offset from nozzle on your machine
y_offset: 25.75 # update with offset from nozzle on your machine
mesh_main_direction: x
mesh_runs: 2

[safe_z_home]
home_xy_position: 150, 80 #   Sets the x, y position used for z homing with beacon
z_hop: 3 #   Retracts the z axis before x, y homing to avoid dragging the nozzle.

[bed_mesh]
speed: 100 #  Movement speed during mesh measurement.
mesh_min: 2, -15
mesh_max: 280, 132.25
probe_count: 6, 6

#####################################################################
#   Extruder
#####################################################################


[extruder]

max_extrude_cross_section: 5
step_pin: PD15
dir_pin: PD14
enable_pin: !PC7
heater_pin: PB4
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PA2

#Orbiter 2.0 congif
microsteps: 16
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree

rotation_distance:  4.6824 #4.7297 #4.637 #   rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100


nozzle_diameter: 0.400
filament_diameter: 1.75

max_extrude_only_distance: 500
max_extrude_only_velocity: 120
pressure_advance: 0.035 #0.025 stock #calibrate me
pressure_advance_smooth_time: 0.03 #calibrate me

min_temp: 10
max_temp: 300
max_power: 1.0
min_extrude_temp: 170

[tmc2209 extruder]
interpolate: true
run_current: 0.85 #Calibrate
hold_current: 0.100
sense_resistor: 0.110 #Calibrate
stealthchop_threshold: 0
driver_TBL: 0
driver_HEND: 6
driver_HSTRT: 7
driver_TOFF: 4
uart_pin: PC6
interpolate: false





#####################################################################
#   E3d Hihg Temp Bed Heater 
#####################################################################

[heater_bed]
##  SSR Pin - HB
##  Thermistor - TB
heater_pin: PD7
sensor_pin: PA3
sensor_type: ATC Semitec 104GT-2
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.6
min_temp: 0
max_temp: 130

#####################################################################
#   Fan Control
#####################################################################

[heater_fan hotend_fan]
##  Hotend Fan - FAN0
pin: PB6
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
# If you are experiencing back flow, you can reduce fan_speed
fan_speed: 1.0

#https://github.com/SoftFever/OrcaSlicer/wiki/Auxiliary-fan
# instead of using [fan], we define the default part cooling fan with [fan_generic] here


# comment out it if you don't have auxiliary fan
[fan_generic fan0]
pin: PB7
cycle_time: 0.01
hardware_pwm: false

# this is the exhaust fan
# comment out it if you don't have exhaust fan
[fan_generic fan2]
pin: PB5
cycle_time: 0.01
hardware_pwm: false

[gcode_macro M106]
gcode:
    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
    {% set speed = (params.S|float / 255 if params.S is defined else 1.0) %}
    SET_FAN_SPEED FAN={fan} SPEED={speed}


#####################################################################
#   LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE2 Connector (Optional)
##Octopus 1.0 & 1.1, Octopus PRO 1.0
#pin: PB10
##Octopus PRO 1.1
#pin: PB0
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[bed_screws]
  screw1: 24, 9
  screw2: 255, 9
  screw3: 255, 186
  screw4: 24, 186

[screws_tilt_adjust]
screw1: 139, 159
screw1_name: Rear Screw
screw2: 14, 9
screw2_name: front left screw
screw3: 279, 9
screw3_name: front right screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M3  

[gcode_macro BED_SCREWS]
gcode:
  BED_SCREWS_ADJUST  

#####################################################################
#   print_start macro
#####################################################################
## https://github.com/jontek2/A-better-print_start-macro ##
## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Screw_tilt_adjust if your printer is a Trident
## Quad gantry level if your printer is a V2
## Nevermore - if you have one

[gcode_macro PRINT_START]
gcode:
  SET_DISPLAY_TEXT MSG="Test Code"    
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  # STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Set Bed Temp High: {target_bed}c"           # Displays info
    # STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                         # Goes to center of the bed
    M190 S{target_bed}                                       # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak 7 min: {target_bed}c"  # Displays info
    # TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
    G4 P420  #000                                          # Waits 5 min for the bedtemp to stabilize (Min x 60000 = Mil Sec)

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed Temp Low: {target_bed}c"           # Displays info
    # STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak 5 min"               # Displays info
    G4 P3000 #00                                          # Waits 5 min for the bedtemp to stabilize 9Min x 60000 = Mil Sec)
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
  M109 S150                                    # Heats the nozzle to 150c
  
  #  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  #STATUS_MESHING                    # Sets SB-leds to bed mesh-mode

  bed_mesh_calibrate                 # Starts bed mesh  

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  # STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp
  
 VORON_PURGE   



#####################################################################
#   Macros
#####################################################################

[gcode_macro PRINT_START1]
#   Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT
gcode:
    M117 Homing...                 ; display message
    G28
   
    G28

    
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0

[gcode_macro LOAD_FILAMENT]
gcode:
	{% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < 30.0 %}
		G0 Z30
    {% endif %}
    M83                            ; set extruder to relative
    G1 E45 F1000                  ; quickly load filament set for direct drive, for bowden set to E280
    G1 E30 F300                    ; slower extrusion for hotend path
    G1 E50 F150                    ; prime nozzle with filament
	#TURN_OFF_HEATERS
	G1 E-0.5 F500						; retract a bit
	#G1 E-1 F5						; retract a bit
    M82                            ; set extruder to absolute

[gcode_macro UNLOAD_FILAMENT]
gcode:
	{% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < 30.0 %}
		G0 Z30
    {% endif %}
    M83                            ; set extruder to relative
    G1 E5 F300                    ; extrude a little to soften tip
    G1 E-100 F1000                 ; retract filament completely, set to E380 for Bowden
    M82                            ; set extruder to absolute

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.081
#*# pid_ki = 2.768
#*# pid_kd = 52.377
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 34.317
#*# pid_ki = 1.192
#*# pid_kd = 247.085
#*#
#*# [beacon model default]
#*# model_coef = 1.6411365564385054,
#*# 	  2.029789751270002,
#*# 	  0.8091350774134103,
#*# 	  0.2095065852006388,
#*# 	  -0.009298503989831864,
#*# 	  0.16350148713070822,
#*# 	  0.1395086299429867,
#*# 	  -0.049123860185395864,
#*# 	  0.01871953480594409,
#*# 	  0.05004894622496836
#*# model_domain = 1.8740464735507562e-07,1.9332683069882882e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 38.712518
#*# model_offset = 0.00000
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.117505, 0.041002, 0.020795, 0.031024
#*# 	  0.121125, 0.049881, 0.031366, 0.040241
#*# 	  0.150299, 0.081292, 0.059867, 0.059901
#*# 	  0.196735, 0.126305, 0.102946, 0.097821
#*# 	  0.234862, 0.157087, 0.130889, 0.109914
#*# x_count = 4
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 82.5
#*# max_x = 217.5
#*# min_y = 32.5
#*# max_y = 132.25
